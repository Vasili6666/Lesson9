import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.jupiter.api.Test;

import java.io.InputStream;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

public class JsonTest {

    @Test
    void jsonFileTest() {
        System.out.println("üîπ –®–ê–ì 1: –ü–æ–ª—É—á–∞–µ–º JSON —Ñ–∞–π–ª –∏–∑ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤");

        try (InputStream jsonStream = getClass().getClassLoader()
                .getResourceAsStream("Sklepjson.json")) {

            assertNotNull(jsonStream, "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å –ø—É—Ç—å: Sklepjson.json");

            System.out.println("üîπ –®–ê–ì 2: –°–æ–∑–¥–∞–µ–º ObjectMapper –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JSON");
            ObjectMapper objectMapper = new ObjectMapper();

            System.out.println("üîπ –®–ê–ì 3: –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º JSON –≤ Java –æ–±—ä–µ–∫—Ç—ã");
            User[] users = objectMapper.readValue(jsonStream, User[].class);

            System.out.println("üîπ –®–ê–ì 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ");
            assertEquals(3, users.length, "–î–æ–ª–∂–Ω–æ –±—ã—Ç—å 3 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");

            User jan = users[0];
            User anna = users[1];
            User piotr = users[2];

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ø–Ω–∞ (–ø–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
            assertEquals("Jan", jan.getImie(), "–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è Jan");
            assertEquals("Kowalski", jan.getNazwisko(), "–ù–µ–≤–µ—Ä–Ω–∞—è —Ñ–∞–º–∏–ª–∏—è Jan");
            assertEquals("jan.kowalski@email.pl", jan.getEmail(), "–ù–µ–≤–µ—Ä–Ω—ã–π email Jan");
            assertEquals(28, jan.getWiek(), "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç Jan");
            assertTrue(jan.isAktywny(), "Jan –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–∫—Ç–∏–≤–µ–Ω");
            assertTrue(jan.getZamowienia().contains("Laptop"), "–£ Jan –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Laptop");
            assertTrue(jan.getZamowienia().contains("Mysz"), "–£ Jan –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å Mysz");
            assertEquals(2, jan.getZamowienia().size(), "–£ Jan –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 2 –∑–∞–∫–∞–∑–∞");

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ê–Ω–Ω—É (–≤—Ç–æ—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
            assertEquals("Anna", anna.getImie(), "–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è Anna");
            assertEquals("Nowak", anna.getNazwisko(), "–ù–µ–≤–µ—Ä–Ω–∞—è —Ñ–∞–º–∏–ª–∏—è Anna");
            assertEquals("anna.nowak@email.pl", anna.getEmail(), "–ù–µ–≤–µ—Ä–Ω—ã–π email Anna");
            assertEquals(32, anna.getWiek(), "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç Anna");
            assertFalse(anna.isAktywny(), "Anna –ù–ï –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–∞");
            assertTrue(anna.getZamowienia().contains("Klawiatura"), "–£ Anna –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å Klawiatura");
            assertTrue(anna.getZamowienia().contains("Monitor"), "–£ Anna –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Monitor");
            assertEquals(2, anna.getZamowienia().size(), "–£ Anna –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 2 –∑–∞–∫–∞–∑–∞");

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ü–µ—Ç—Ä–∞ (—Ç—Ä–µ—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
            assertEquals("Piotr", piotr.getImie(), "–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è Piotr");
            assertEquals("Wi≈õniewski", piotr.getNazwisko(), "–ù–µ–≤–µ—Ä–Ω–∞—è —Ñ–∞–º–∏–ª–∏—è Piotr");
            assertEquals("piotr.wisniewski@email.pl", piotr.getEmail(), "–ù–µ–≤–µ—Ä–Ω—ã–π email Piotr");
            assertEquals(25, piotr.getWiek(), "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç Piotr");
            assertTrue(piotr.isAktywny(), "Piotr –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–∫—Ç–∏–≤–µ–Ω");
            assertTrue(piotr.getZamowienia().contains("Mysz"), "–£ Piotr –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å Mysz");
            assertTrue(piotr.getZamowienia().contains("Klawiatura"), "–£ Piotr –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å Klawiatura");
            assertTrue(piotr.getZamowienia().contains("Monitor"), "–£ Piotr –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å Monitor");
            assertEquals(3, piotr.getZamowienia().size(), "–£ Piotr –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 3 –∑–∞–∫–∞–∑–∞");


            System.out.println("üîπ –®–ê–ì 5: –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é");
            System.out.println("=== –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –ò–ó JSON ===");
            for (User user : users) {
                System.out.println("üë§ " + user.getImie() + " " + user.getNazwisko());
                System.out.println("   üõí Zam√≥wienia: " + user.getZamowienia());
            }

            System.out.println("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!");

        } catch (Exception e) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
            System.out.println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ñ–∞–π–ª–æ–º: " + e.getMessage());
            e.printStackTrace();
            fail("–¢–µ—Å—Ç —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π: " + e.getMessage());
        }
    }
}